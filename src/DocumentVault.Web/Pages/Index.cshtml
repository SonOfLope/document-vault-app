@page
@model IndexModel
@{
    ViewData["Title"] = "Document Vault";
}

<div class="container">
    <h1 class="my-4">Document Vault</h1>
    
    <div class="row mb-4">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    Upload Document
                </div>
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data">
                        <div class="mb-3">
                            <label for="formFile" class="form-label">Select Document</label>
                            <input class="form-control" type="file" id="formFile" name="file" required>
                        </div>
                        <div class="mb-3">
                            <label for="tags" class="form-label">Tags (comma separated)</label>
                            <input type="text" class="form-control" id="tags" name="tags" placeholder="e.g. invoice, 2023, important">
                        </div>
                        <button type="submit" class="btn btn-primary">Upload</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    Search Documents
                </div>
                <div class="card-body">
                    <form id="searchForm">
                        <div class="mb-3">
                            <label for="searchTags" class="form-label">Search by Tags</label>
                            <input type="text" class="form-control" id="searchTags" placeholder="e.g. invoice, important">
                        </div>
                        <button type="submit" class="btn btn-primary">Search</button>
                        <button type="button" id="clearSearch" class="btn btn-secondary">Show All</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    Documents
                </div>
                <div class="card-body">
                    <div id="documentsList">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Filename</th>
                                    <th>Tags</th>
                                    <th>Uploaded</th>
                                    <th>Size</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="documentsTable">
                                @if (Model.Documents.Any())
                                {
                                    @foreach (var doc in Model.Documents)
                                    {
                                        <tr data-id="@doc.Id">
                                            <td>@doc.FileName</td>
                                            <td>@string.Join(", ", doc.Tags)</td>
                                            <td>@doc.UploadedAt.ToString("g")</td>
                                            <td>@((doc.FileSize / 1024.0).ToString("F2")) KB</td>
                                            <td>
                                                <button class="btn btn-sm btn-primary create-link" data-id="@doc.Id">
                                                    Create Link
                                                </button>
                                                <button class="btn btn-sm btn-danger delete-doc" data-id="@doc.Id">
                                                    Delete
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center">No documents found</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Link Modal -->
<div class="modal fade" id="linkModal" tabindex="-1" aria-labelledby="linkModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="linkModalLabel">Create Shareable Link</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="linkForm">
                    <input type="hidden" id="documentId" />
                    <div class="mb-3">
                        <label for="expiryHours" class="form-label">Link Expiry (hours)</label>
                        <input type="number" class="form-control" id="expiryHours" min="1" max="720" value="24">
                    </div>
                </form>
                <div id="linkResult" class="d-none mt-3">
                    <div class="alert alert-success">
                        <p><strong>Shareable Link:</strong></p>
                        <p><a href="#" id="generatedLink" target="_blank"></a></p>
                        <p><small>Expires: <span id="expiryDate"></span></small></p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="generateLink">Generate Link</button>
                <button type="button" class="btn btn-success d-none" id="copyLink">Copy Link</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Handle document search
            $('#searchForm').on('submit', function(e) {
                e.preventDefault();
                const tags = $('#searchTags').val();
                if (!tags) {
                    loadAllDocuments();
                    return;
                }
                
                $.ajax({
                    url: '/api/documents/search?tags=' + encodeURIComponent(tags),
                    type: 'GET',
                    success: function(data) {
                        updateDocumentsTable(data);
                    },
                    error: function(xhr) {
                        alert('Error searching documents: ' + xhr.responseText);
                    }
                });
            });
            
            // Clear search and show all documents
            $('#clearSearch').on('click', function() {
                $('#searchTags').val('');
                loadAllDocuments();
            });
            
            // Delete document
            $(document).on('click', '.delete-doc', function() {
                const id = $(this).data('id');
                if (confirm('Are you sure you want to delete this document? This action cannot be undone.')) {
                    $.ajax({
                        url: '/api/documents/' + id,
                        type: 'DELETE',
                        success: function() {
                            $('tr[data-id="' + id + '"]').remove();
                            if ($('#documentsTable tr').length === 0) {
                                $('#documentsTable').html('<tr><td colspan="5" class="text-center">No documents found</td></tr>');
                            }
                        },
                        error: function(xhr) {
                            alert('Error deleting document: ' + xhr.responseText);
                        }
                    });
                }
            });
            
            // Open create link modal
            $(document).on('click', '.create-link', function() {
                const id = $(this).data('id');
                $('#documentId').val(id);
                $('#linkResult').addClass('d-none');
                $('#generateLink').removeClass('d-none');
                $('#copyLink').addClass('d-none');
                $('#linkModal').modal('show');
            });
            
            // Generate link
            $('#generateLink').on('click', function() {
                const id = $('#documentId').val();
                const expiryHours = $('#expiryHours').val();
                
                $.ajax({
                    url: '/api/documents/' + id + '/link',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({ expiryHours: parseInt(expiryHours) }),
                    success: function(data) {
                        $('#generatedLink').text(data.url).attr('href', data.url);
                        $('#expiryDate').text(new Date(data.expiresAt).toLocaleString());
                        $('#linkResult').removeClass('d-none');
                        $('#generateLink').addClass('d-none');
                        $('#copyLink').removeClass('d-none');
                    },
                    error: function(xhr) {
                        alert('Error generating link: ' + xhr.responseText);
                    }
                });
            });
            
            // Copy link to clipboard
            $('#copyLink').on('click', function() {
                const link = $('#generatedLink').text();
                navigator.clipboard.writeText(link).then(function() {
                    alert('Link copied to clipboard!');
                });
            });
            
            // Helper function to load all documents
            function loadAllDocuments() {
                $.ajax({
                    url: '/api/documents',
                    type: 'GET',
                    success: function(data) {
                        updateDocumentsTable(data);
                    },
                    error: function(xhr) {
                        alert('Error loading documents: ' + xhr.responseText);
                    }
                });
            }
            
            // Helper function to update the documents table
            function updateDocumentsTable(documents) {
                if (documents.length === 0) {
                    $('#documentsTable').html('<tr><td colspan="5" class="text-center">No documents found</td></tr>');
                    return;
                }
                
                let html = '';
                documents.forEach(function(doc) {
                    html += `<tr data-id="${doc.id}">
                        <td>${doc.fileName}</td>
                        <td>${doc.tags.join(', ')}</td>
                        <td>${new Date(doc.uploadedAt).toLocaleString()}</td>
                        <td>${(doc.fileSize / 1024.0).toFixed(2)} KB</td>
                        <td>
                            <button class="btn btn-sm btn-primary create-link" data-id="${doc.id}">
                                Create Link
                            </button>
                            <button class="btn btn-sm btn-danger delete-doc" data-id="${doc.id}">
                                Delete
                            </button>
                        </td>
                    </tr>`;
                });
                $('#documentsTable').html(html);
            }
        });
    </script>
}